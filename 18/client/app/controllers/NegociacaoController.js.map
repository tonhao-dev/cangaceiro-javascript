{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DateConverter","getNegociacaoDao","Bind","getExceptionMessage","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","dao","negociacoes","listaTodos","forEach","adiciona","negociacao","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","value","focus","paraData","parseInt","parseFloat","importaNegociacoes","obtemNegociacoesDoPeriodo","console","log","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente","apaga","apagaTodos","esvazia"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DateConverter } from '../ui/index.js';\nimport { getNegociacaoDao, Bind, getExceptionMessage } from '../util/index.js';\n\nexport class NegociacaoController {\n\n    constructor() {\n\n        const $ = document.querySelector.bind(document);\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n\n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia'\n        );\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto'\n        );\n\n        this._service = new NegociacaoService();\n\n        this._init();\n    }\n\n    async _init() {\n\n        try {\n            const dao = await getNegociacaoDao();\n            const negociacoes = await dao.listaTodos();\n            negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\n        } catch (err) {\n            this._mensagem.texto  = getExceptionMessage(err);\n        }\n    }\n\n    async adiciona(event) {\n\n        try {\n            event.preventDefault();\n            const negociacao = this._criaNegociacao();\n            const dao = await getNegociacaoDao();\n            await dao.adiciona(negociacao);\n            this._negociacoes.adiciona(negociacao);\n            this._mensagem.texto = 'Negociação adicionada com sucesso';\n            this._limpaFormulario();\n\n        } catch (err) {\n            this._mensagem.texto  = getExceptionMessage(err);\n        }\n    }\n\n    _limpaFormulario() {\n\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0\n        this._inputData.focus();\n    }\n\n    _criaNegociacao() {\n\n        return new Negociacao(\n            DateConverter.paraData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    async importaNegociacoes() {\n\n        try {\n            const negociacoes = await this._service.obtemNegociacoesDoPeriodo();\n            console.log(negociacoes);\n            negociacoes.filter(novaNegociacao =>\n\n                !this._negociacoes.paraArray().some(negociacaoExistente =>\n                    novaNegociacao.equals(negociacaoExistente)))\n\n                .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n            this._mensagem.texto = 'Negociações do período importadas com sucesso';\n        } catch (err) {\n            this._mensagem.texto  = getExceptionMessage(err);\n        }\n    }\n\n    async apaga() {\n\n        try {\n            const dao = await getNegociacaoDao();\n            await dao.apagaTodos();\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso';\n        } catch (err) {\n            this._mensagem.texto  = getExceptionMessage(err);\n        }\n    }\n\n}"]}